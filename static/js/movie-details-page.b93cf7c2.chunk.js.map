{"version":3,"file":"static/js/movie-details-page.b93cf7c2.chunk.js","mappings":"mfAIaA,EAAQC,EAAAA,GAAAA,GAAH,uMAYLC,EAAQD,EAAAA,GAAAA,IAAH,qOAaLE,EAAOF,EAAAA,GAAAA,IAAH,0HAQJG,EAAYH,EAAAA,GAAAA,IAAH,qHAOTI,EAAOJ,EAAAA,GAAAA,KAAH,qOAaJK,EAAML,EAAAA,GAAAA,IAAH,gSAiBHM,EAAON,EAAAA,GAAAA,EAAH,yLAYJO,EAAkBP,EAAAA,GAAAA,GAAH,soBAkCfQ,EAAOR,EAAAA,GAAAA,GAAH,4GAOJS,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,oNAadW,GAAkBX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,6ZAoBfa,EAAQb,EAAAA,GAAAA,OAAH,sP,0KC9ILc,EAAe,SAAC,GAAmB,IAO5BC,EAPWC,EAAgB,EAAhBA,UAGvBC,EAASD,EAAUC,OACrBD,EAAUC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC/C,UAcEC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACGP,EAAUQ,eACT,UAAC,KAAD,WACGR,EAAUS,MADb,KAvBa,IAAIC,KAAKV,EAAUQ,cAAcG,cAuB9C,QAIF,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAtBKb,EAsBUC,EAAUa,YArBtB,OAAVd,EACK,4DAEH,kCAAN,OAAyCA,IAkBSe,IAAKd,EAAUS,SAC7D,UAAC,KAAD,WACGT,EAAUe,aAAe,IACxB,UAAC,KAAD,YACE,SAAC,KAAD,2BACCC,KAAKC,MAA+B,GAAzBjB,EAAUe,cAFxB,OAKDf,EAAUkB,WACT,UAAC,KAAD,YACE,SAAC,KAAD,yBACClB,EAAUkB,YAGdlB,EAAUC,QAAsC,IAA5BD,EAAUC,OAAOkB,SACpC,UAAC,KAAD,YACE,SAAC,KAAD,uBACClB,KAGJD,EAAUoB,QAA8C,IAApCpB,EAAUoB,OAAOC,QAAQF,SAC5C,UAAC,KAAD,uBAEE,SAAC,KAAD,CACEP,IAAG,wCAtCfZ,EAAUoB,OAAOC,QAAQC,MAAK,SAAAC,GAAK,MAAmB,WAAfA,EAAMC,IAAV,IAC/BxB,EAAUoB,OAAOC,QAAQC,MAAK,SAAAC,GAAK,MAAmB,WAAfA,EAAMC,IAAV,IAA6BC,IAChEzB,EAAUoB,OAAOC,QAAQ,GAAGI,KAqCpBC,YAAY,IACZC,iBAAe,aAMxB3B,EAAUS,QACT,4BACE,SAAC,KAAD,sCACA,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAgBmB,GAAI,OAAQC,MAAOvB,EAASuB,MAA5C,qBAIF,yBACE,SAAC,KAAD,CAAgBD,GAAI,UAAWC,MAAOvB,EAASuB,MAA/C,8BAOR,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,E,SCnGYC,E,QAAajD,GAAAA,OAAH,kL,oBCGVkD,EAAe,WAC1B,IAAM5B,GAAWC,EAAAA,EAAAA,MACX4B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACH,EAAD,CACET,KAAK,SACLa,QAAS,WAAO,IAAD,IACbF,EAAQ,iBAAC7B,QAAD,IAACA,GAAD,UAACA,EAAUuB,aAAX,aAAC,EAAiBS,YAAlB,QAA0B,IACnC,EAJH,WAME,SAAC,cAAD,CAAsBC,MAAO,CAAEC,KAAM,GAAIC,MAAO,WAAhD,UACE,SAAC,MAAD,MAPJ,YAYH,ECaD,EA5ByB,WACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAO5C,EAAP,KAAkB6C,EAAlB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMC,GAAaC,EAAAA,EAAAA,QAAO,MAe1B,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,2FACpBJ,GAAa,GADO,UAEDK,EAAAA,EAAAA,IAAgBV,GAFf,OAEdW,EAFc,OAGpBR,EAAaQ,GACbN,GAAa,GAJO,2CAAH,qDAMQ,OAAvBC,EAAWM,UACbH,IACAH,EAAWM,QAAU,EAExB,GAAE,CAACZ,KAGF,iCACE,SAACR,EAAD,IACCY,IAAa,SAACd,EAAA,EAAD,IACbhC,IAAa,SAACF,EAAD,CAAcE,UAAWA,MAG5C,C,0NC/BDuD,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,gHAEoBF,EAAAA,EAAAA,GAAM,uBAAwB,CACnDG,OAAQ,CACNC,QAASH,KAJV,uBAEKH,EAFL,EAEKA,KAFL,kBAOIA,EAAKhC,SAPT,gCASHuC,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,8FAAsCC,EAAtC,+BAA6C,EAA7C,mBAEoBT,EAAAA,EAAAA,GAAM,iBAAkB,CAC7CG,OAAQ,CACNC,QAASH,EACTO,MAAAA,EACAC,KAAAA,KAND,uBAEKX,EAFL,EAEKA,KAFL,kBASIA,GATJ,gCAWHO,QAAQC,MAAR,MAXG,iFAeA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA+Ba,GAA/B,mGAEoBV,EAAAA,EAAAA,GAAM,WAAD,OAAYU,GAAM,CAC5CP,OAAQ,CACNC,QAASH,EACTU,mBAAoB,YALrB,uBAEKb,EAFL,EAEKA,KAFL,kBAQIA,GARJ,gCAUHO,QAAQC,MAAR,MAVG,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,mGAEoBV,EAAAA,EAAAA,GAAM,WAAD,OAAYU,EAAZ,YAA0B,CACpDP,OAAQ,CACNC,QAASH,KAJV,uBAEKH,EAFL,EAEKA,KAFL,kBAOIA,EAAKe,MAPT,gCASHR,QAAQC,MAAR,MATG,gFAaA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,mGAEoBV,EAAAA,EAAAA,GAAM,WAAD,OAAYU,EAAZ,YAA0B,CACpDP,OAAQ,CACNC,QAASH,KAJV,uBAEKH,EAFL,EAEKA,KAFL,kBAOIA,EAAKhC,SAPT,gCASHuC,QAAQC,MAAR,MATG,gFAaA,SAAeS,IAAtB,4CAAO,OAAP,oBAAO,gHAEoBf,EAAAA,EAAAA,GAAM,yBAA0B,CACrDG,OAAQ,CACNC,QAASH,KAJV,uBAEKH,EAFL,EAEKA,KAFL,kBAOIA,EAAKhC,SAPT,gCASHuC,QAAQC,MAAR,MATG,gF","sources":["components/DetailedCard/DetailedCard.styled.js","components/DetailedCard/DetailedCard.jsx","components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","pages/MovieDetailsPage.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 35px 0 25px 0;\n  font-size: 28px;\n  font-weight: 500;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    margin: 25px 0 55px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  width: 250px;\n  margin: 0 auto;\n  @media (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n  @media (min-width: 768px) {\n    align-self: flex-start;\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 50px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const SmallWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.45;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const AdditionalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 24px;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 26px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 28px;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    margin: 25px auto;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      rgba(128, 147, 255, 0.25) 15%,\n      rgba(125, 155, 250, 1) 40%,\n      rgba(96, 219, 212, 0.8) 65%,\n      rgba(92, 228, 207, 0.15)\n    );\n\n    @media (min-width: 768px) {\n      width: 750px;\n      margin: 0 auto 25px auto;\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const AdditionalLink = styled(Link)`\n  font-size: 20px;\n  text-transform: lowercase;\n  color: #5ce4cf;\n\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const StyledContainer = styled(ToastContainer)`\n  .Toastify__toast {\n    background-color: #232526;\n    color: #5ce4cf;\n    border: 1px solid #99a9ff;\n  }\n  .Toastify__close-button {\n    color: #5ce4cf;\n  }\n  .Toastify__progress-bar {\n    background: linear-gradient(\n      to right,\n      rgba(128, 147, 255, 0.25),\n      rgba(125, 155, 250, 1),\n      rgba(96, 219, 212, 0.8),\n      rgba(92, 228, 207, 0.15)\n    );\n  }\n`;\n\nexport const Video = styled.iframe`\n  width: 280px;\n  height: 157px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 448px;\n    height: 252px;\n    margin: 0;\n  }\n  @media (min-width: 1280px) {\n    width: 504px;\n    height: 284px;\n  }\n`;\n","import { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport {\n  Title,\n  Image,\n  Wrap,\n  SmallWrap,\n  Span,\n  Text,\n  AdditionalTitle,\n  List,\n  AdditionalLink,\n  Div,\n  Video,\n} from './DetailedCard.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const DetailedCard = ({ movieData }) => {\n  const date = () => new Date(movieData.release_date).getFullYear();\n\n  const genres = movieData.genres\n    ? movieData.genres.map(genre => genre.name).join(', ')\n    : 'unknown';\n\n  const getImgUrl = image => {\n    if (image === null) {\n      return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n    }\n    return `https://image.tmdb.org/t/p/w300${image}`;\n  };\n\n  const getVideo = () =>\n    movieData.videos.results.find(video => video.type === 'Teaser')\n      ? movieData.videos.results.find(video => video.type === 'Teaser').key\n      : movieData.videos.results[0].key;\n\n  const location = useLocation();\n\n  return (\n    <>\n      {movieData.release_date && (\n        <Title>\n          {movieData.title} ({date()})\n        </Title>\n      )}\n      <Wrap>\n        <Image src={getImgUrl(movieData.poster_path)} alt={movieData.title} />\n        <SmallWrap>\n          {movieData.vote_average > 0 && (\n            <Text>\n              <Span>user score: </Span>\n              {Math.round(movieData.vote_average * 10)}%\n            </Text>\n          )}\n          {movieData.overview && (\n            <Text>\n              <Span>overview: </Span>\n              {movieData.overview}\n            </Text>\n          )}\n          {movieData.genres && movieData.genres.length !== 0 && (\n            <Text>\n              <Span>genres: </Span>\n              {genres}\n            </Text>\n          )}\n          {movieData.videos && movieData.videos.results.length !== 0 && (\n            <Div>\n              trailer:\n              <Video\n                src={`https://www.youtube.com/embed/${getVideo()}`}\n                frameBorder=\"0\"\n                allowFullScreen\n              ></Video>\n            </Div>\n          )}\n        </SmallWrap>\n      </Wrap>\n      {movieData.title && (\n        <div>\n          <AdditionalTitle>Additional information</AdditionalTitle>\n          <List>\n            <li>\n              <AdditionalLink to={'cast'} state={location.state}>\n                Cast\n              </AdditionalLink>\n            </li>\n            <li>\n              <AdditionalLink to={'reviews'} state={location.state}>\n                Reviews\n              </AdditionalLink>\n            </li>\n          </List>\n        </div>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nDetailedCard.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    release_date: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background-color: inherit;\n  text-transform: uppercase;\n  color: #99a9ff;\n  font-size: 18px;\n`;\n","import { useNavigate, useLocation } from 'react-router-dom';\nimport { BackButton } from './GoBackButton.styled';\nimport { IconContext } from 'react-icons';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\n\nexport const GoBackButton = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  return (\n    <BackButton\n      type=\"button\"\n      onClick={() => {\n        navigate(location?.state?.from ?? '/');\n      }}\n    >\n      <IconContext.Provider value={{ size: 35, color: '#5CE4CF' }}>\n        <HiOutlineArrowNarrowLeft />\n      </IconContext.Provider>\n      Go back\n    </BackButton>\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOneMovieById } from 'services/moviesAPI';\nimport { DetailedCard } from 'components/DetailedCard/DetailedCard';\nimport { GoBackButton } from 'components/GoBackButton/GoBackButton';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const doOneFetch = useRef(null);\n\n  useEffect(() => {\n    const loadMovieData = async () => {\n      setIsLoading(true);\n      const data = await getOneMovieById(movieId);\n      setMovieData(data);\n      setIsLoading(false);\n    };\n    if (doOneFetch.current === null) {\n      loadMovieData();\n      doOneFetch.current = 1;\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackButton />\n      {isLoading && <Loader />}\n      {movieData && <DetailedCard movieData={movieData} />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios('3/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByQuery(query, page = 1) {\n  try {\n    const { data } = await axios('3/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovieById(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'videos',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieActors(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getTrendingPersons() {\n  try {\n    const { data } = await axios('3/trending/person/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Title","styled","Image","Wrap","SmallWrap","Span","Div","Text","AdditionalTitle","List","AdditionalLink","Link","StyledContainer","ToastContainer","Video","DetailedCard","image","movieData","genres","map","genre","name","join","location","useLocation","release_date","title","Date","getFullYear","src","poster_path","alt","vote_average","Math","round","overview","length","videos","results","find","video","type","key","frameBorder","allowFullScreen","to","state","Suspense","fallback","Loader","BackButton","GoBackButton","navigate","useNavigate","onClick","from","value","size","color","movieId","useParams","useState","setMovieData","isLoading","setIsLoading","doOneFetch","useRef","useEffect","loadMovieData","getOneMovieById","data","current","axios","API_KEY","getTrendingMovies","params","api_key","console","error","getMovieByQuery","query","page","id","append_to_response","getMovieActors","cast","getMovieReviews","getTrendingPersons"],"sourceRoot":""}