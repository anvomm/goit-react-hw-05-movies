{"version":3,"file":"static/js/cast-subpage.c655a222.chunk.js","mappings":"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","sources":["components/DetailedCard/DetailedCard.styled.js","components/MovieCard/MovieCard.styled.js","components/Review/Review.styled.js","components/ActorCard/ActorCard.styled.js","components/ActorCard/ActorCard.jsx","components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","pages/CastSubPage.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 35px 0 25px 0;\n  font-size: 28px;\n  font-weight: 500;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    margin: 25px 0 55px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  width: 250px;\n  margin: 0 auto;\n  @media (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n  @media (min-width: 768px) {\n    align-self: flex-start;\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 50px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const SmallWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.45;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const AdditionalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 24px;\n  color: #99a9ff;\n\n  @media (min-width: 768px) {\n    font-size: 26px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 28px;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    margin: 25px auto;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      rgba(128, 147, 255, 0.25) 15%,\n      rgba(125, 155, 250, 1) 40%,\n      rgba(96, 219, 212, 0.8) 65%,\n      rgba(92, 228, 207, 0.15)\n    );\n\n    @media (min-width: 768px) {\n      width: 750px;\n      margin: 0 auto 25px auto;\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const AdditionalLink = styled(Link)`\n  font-size: 20px;\n  text-transform: lowercase;\n  color: #5ce4cf;\n\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const StyledContainer = styled(ToastContainer)`\n  .Toastify__toast {\n    background-color: #232526;\n    color: #5ce4cf;\n    border: 1px solid #99a9ff;\n  }\n  .Toastify__close-button {\n    color: #5ce4cf;\n  }\n  .Toastify__progress-bar {\n    background: linear-gradient(\n      to right,\n      rgba(128, 147, 255, 0.25),\n      rgba(125, 155, 250, 1),\n      rgba(96, 219, 212, 0.8),\n      rgba(92, 228, 207, 0.15)\n    );\n  }\n`;\n\nexport const Video = styled.iframe`\n  width: 280px;\n  height: 157px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 448px;\n    height: 252px;\n    margin: 0;\n  }\n  @media (min-width: 1280px) {\n    width: 504px;\n    height: 284px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Image = styled.img`\n  border-radius: 5px 5px 0 0;\n  width: 200px;\n  @media (min-width: 300px) {\n    width: 285px;\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n  transition: box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const CardBottom = styled.div`\n  padding: 20px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: 22px;\n  line-height: 1.33;\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { Text } from 'components/DetailedCard/DetailedCard.styled';\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 20px;\n  color: #5ce4cf;\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 26px;\n  }\n`;\n\nexport const Notification = styled.p`\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const ReviewText = styled(Text)`\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { CardBottom } from 'components/MovieCard/MovieCard.styled';\n\nexport const CardTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 18px;\n  line-height: 1.33;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  text-align: center;\n`;\n\nexport const ActorCardBottom = styled(CardBottom)`\n  width: 160px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px 5px 0 0;\n  width: 200px;\n`;\n","import PropTypes from 'prop-types';\nimport { CardTitle, Text, ActorCardBottom, Image } from './ActorCard.styled';\n\nexport const ActorCard = ({ name, picture, character }) => {\n  const getImgUrl = image => {\n    if (image === null) {\n      return 'https://img.icons8.com/ios-filled/512/gender-neutral-user.png';\n    }\n    return `https://image.tmdb.org/t/p/w200${image}`;\n  };\n  return (\n    <>\n      <Image src={getImgUrl(picture)} alt={name} width=\"200\" />\n      <ActorCardBottom>\n        <CardTitle>{name}</CardTitle>\n        <Text>{character}</Text>\n      </ActorCardBottom>\n    </>\n  );\n};\n\nActorCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string,\n  character: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const Card = styled.li`\n  background-color: #232526;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport { List, Card } from './ActorsList.styled';\n\nexport const ActorsList = ({ actors }) => {\n  return (\n    <List>\n      {actors.map(actor => {\n        return (\n          <Card key={actor.id}>\n            <ActorCard\n              name={actor.name}\n              picture={actor.profile_path}\n              character={actor.character}\n            />\n          </Card>\n        );\n      })}\n    </List>\n  );\n};\n\nActorsList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      picture: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieActors } from 'services/moviesAPI';\nimport { ActorsList } from 'components/ActorsList/ActorsList';\nimport { Notification } from 'components/Review/Review.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst CastSubPage = () => {\n  const { movieId } = useParams();\n  const doOneFetch = useRef(null);\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadActors = async () => {\n      setIsLoading(true);\n      const data = await getMovieActors(movieId);\n      const arrayOfActors = data.map(\n        ({ name, profile_path, character, id }) => ({\n          name,\n          id,\n          profile_path,\n          character,\n        })\n      );\n      setActors(arrayOfActors);\n      setIsLoading(false);\n    };\n\n    if (doOneFetch.current === null) {\n      loadActors();\n      doOneFetch.current = 1;\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {actors.length === 0 && !isLoading ? (\n        <Notification>Unfortunately no actors was found :(</Notification>\n      ) : (\n        <ActorsList actors={actors} />\n      )}\n    </>\n  );\n};\n\nexport default CastSubPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios('3/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByQuery(query, page = 1) {\n  try {\n    const { data } = await axios('3/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovieById(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'videos',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieActors(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const { data } = await axios(`3/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getTrendingPersons() {\n  try {\n    const { data } = await axios('3/trending/person/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Title","styled","Image","Wrap","SmallWrap","Span","Div","Text","AdditionalTitle","List","AdditionalLink","Link","StyledContainer","ToastContainer","Video","CardLink","CardBottom","CardTitle","Rating","Notification","ReviewText","ActorCardBottom","ActorCard","image","name","picture","character","src","alt","width","Card","ActorsList","actors","map","actor","profile_path","id","movieId","useParams","doOneFetch","useRef","useState","setActors","isLoading","setIsLoading","useEffect","loadActors","getMovieActors","data","arrayOfActors","current","Loader","length","axios","API_KEY","getTrendingMovies","params","api_key","results","console","error","getMovieByQuery","query","page","getOneMovieById","append_to_response","cast","getMovieReviews","getTrendingPersons"],"sourceRoot":""}